import json

FILE_NAME = 'contacts.json'

def load_contacts():
    try:
        with open(FILE_NAME, 'r') as file:
            return json.load(file)
    except (FileNotFoundError, json.JSONDecodeError):
        return []

def save_contacts(contacts):
    with open(FILE_NAME, 'w') as file:
        json.dump(contacts, file, indent=4)

def display_contacts(contacts):
    if not contacts:
        print("No contacts available.")
    else:
        print("\nContact List:")
        for index, contact in enumerate(contacts, start=1):
            print(f"{index}. {contact['name']} - {contact['phone']}")

def add_contact(contacts):
    name = input("Enter contact name: ")
    phone = input("Enter phone number: ")
    email = input("Enter email address: ")
    address = input("Enter address: ")
    contacts.append({'name': name, 'phone': phone, 'email': email, 'address': address})
    print("Contact added.")

def search_contact(contacts):
    search_term = input("Enter name or phone number to search: ")
    found_contacts = [c for c in contacts if search_term in c['name'] or search_term in c['phone']]
    if found_contacts:
        for contact in found_contacts:
            print(f"Name: {contact['name']}, Phone: {contact['phone']}, Email: {contact['email']}, Address: {contact['address']}")
    else:
        print("No contacts found.")

def update_contact(contacts):
    display_contacts(contacts)
    try:
        contact_index = int(input("Enter the number of the contact to update: ")) - 1
        if 0 <= contact_index < len(contacts):
            print("Leave field empty to keep current value.")
            name = input(f"Enter new name ({contacts[contact_index]['name']}): ") or contacts[contact_index]['name']
            phone = input(f"Enter new phone number ({contacts[contact_index]['phone']}): ") or contacts[contact_index]['phone']
            email = input(f"Enter new email address ({contacts[contact_index]['email']}): ") or contacts[contact_index]['email']
            address = input(f"Enter new address ({contacts[contact_index]['address']}): ") or contacts[contact_index]['address']
            contacts[contact_index] = {'name': name, 'phone': phone, 'email': email, 'address': address}
            print("Contact updated.")
        else:
            print("Invalid contact number.")
    except ValueError:
        print("Invalid input. Please enter a number.")

def delete_contact(contacts):
    display_contacts(contacts)
    try:
        contact_index = int(input("Enter the number of the contact to delete: ")) - 1
        if 0 <= contact_index < len(contacts):
            contacts.pop(contact_index)
            print("Contact deleted.")
        else:
            print("Invalid contact number.")
    except ValueError:
        print("Invalid input. Please enter a number.")

def main():
    contacts = load_contacts()
    
    while True:
        print("\nContact Management System")
        print("1. View Contact List")
        print("2. Add Contact")
        print("3. Search Contact")
        print("4. Update Contact")
        print("5. Delete Contact")
        print("6. Exit")
        
        choice = input("Enter your choice: ")
        
        if choice == '1':
            display_contacts(contacts)
        elif choice == '2':
            add_contact(contacts)
            save_contacts(contacts)
        elif choice == '3':
            search_contact(contacts)
        elif choice == '4':
            update_contact(contacts)
            save_contacts(contacts)
        elif choice == '5':
            delete_contact(contacts)
            save_contacts(contacts)
        elif choice == '6':
            break
        else:
            print("Invalid choice. Please select a valid option.")

if __name__ == "__main__":
    main()
